import telebot
from telebot import types
from postgres_db import create_table, select_Name, update_person

data1 = ''
time1 = ''
name_person1 = ''
master = ''


TOKEN = '6074203197:AAGh4YuAoXnH5iqTSLzGJHV9quOuvOFPQUc'
bot = telebot.TeleBot(token=TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.first_name
    id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    if id == 995091801:
        client = types.KeyboardButton('–ö–ª–∏–µ–Ω—Ç–∞–º')
        master = types.KeyboardButton('–ú–∞—Å—Ç–µ—Ä–∞–º')
        create_table = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É')
        insert = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞')
        select = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è')
        markup.add(client, master, create_table, insert, select)
    else:
        client = types.KeyboardButton('–ö–ª–∏–µ–Ω—Ç–∞–º')
        master = types.KeyboardButton('–ú–∞—Å—Ç–µ—Ä–∞–º')
        markup.add(client, master)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç,{user_name}!\n–Ø —á–∞—Ç-–±–æ—Çüòá', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    id = message.from_user.id
    if message.chat.type == 'private':
        if message.text == '–ú–∞—Å—Ç–µ—Ä–∞–º':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–°—Ç—É–¥–∏—è')
            board2 = types.KeyboardButton('–ê—Ä–µ–Ω–¥–∞')
            board3 = types.KeyboardButton('–û–±—É—á–µ–Ω–∏–µ')
            board4 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3, board4)
            bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup=markup)

        elif message.text == '–°—Ç—É–¥–∏—è':
            bot.send_message(message.chat.id, '–¢—É—Ç –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—É–¥–∏–∏ –∏ –≤—Å–µ —Ç–∞–∫–æ–µ')

        elif message.text == '–ê—Ä–µ–Ω–¥–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board5 = types.KeyboardButton('–ù–∞ –¥–µ–Ω—å(–≥–æ—Å—Ç–µ–≤–æ–π)')
            board6 = types.KeyboardButton('–ü–æ–º–µ—Å—è—á–Ω–æ')
            board7 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board5, board6, board7)
            bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç', reply_markup=markup)

        elif message.text == '–û–±—É—á–µ–Ω–∏–µ':
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–æ –±—É–¥–µ—Ç')

        elif message.text == '–ù–∞ –¥–µ–Ω—å(–≥–æ—Å—Ç–µ–≤–æ–π)':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board8 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞')
            board9 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board8, board9)
            bot.send_message(message.chat.id, f'–¶–µ–Ω–∞, –Ω—É —Å–∫–æ–ª—å–∫–æ-—Ç–æ —Å—Ç–æ–∏—Ç\n–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–æ, —á—Ç–æ –≤—Ö–æ–¥–∏—Ç',
                             reply_markup=markup)

        elif message.text == '–ü–æ–º–µ—Å—è—á–Ω–æ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board8 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞')
            board9 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board8, board9)
            bot.send_message(message.chat.id, f'–¶–µ–Ω–∞, –Ω—É —Å–∫–æ–ª—å–∫–æ-—Ç–æ —Å—Ç–æ–∏—Ç\n–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–æ, —á—Ç–æ –≤—Ö–æ–¥–∏—Ç',
                             reply_markup=markup)

        elif message.text == '–ö–ª–∏–µ–Ω—Ç–∞–º':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è')
            board2 = types.KeyboardButton('–ó–∞–ø–∏—Å—å')
            board3 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3)
            bot.send_message(message.chat.id, '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –∏–ª–∏ —Å—Ä–∞–∑—É –Ω–∞ –∑–∞–ø–∏—Å—å?', reply_markup=markup)

        elif message.text == '–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–ú–∞—Å—Ç–µ—Ä–∞')
            board2 = types.KeyboardButton('–í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å—Ç—É–¥–∏–∏')
            board3 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3)
            bot.send_message(message.chat.id, '–ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —Å—Ç—É–¥–∏–∏', reply_markup=markup)

        elif message.text == '–ó–∞–ø–∏—Å—å':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞')
            board2 = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É—Ç–æ—Ä—É')
            board3 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3)
            bot.send_message(message.chat.id, '–°–ª–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä', reply_markup=markup)

        elif message.text == '–ú–∞—Å—Ç–µ—Ä–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–ú–∞—Å—Ç–µ—Ä–∞')
            board2 = types.KeyboardButton('–†–∞–±–æ—Ç—ã')
            board3 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3)
            bot.send_message(message.chat.id, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã, –∏–ª–∏ —Å–∞–º–∏—Ö –º–∞—Å—Ç–µ—Ä–æ–≤?', reply_markup=markup)

        elif message.text == '–í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å—Ç—É–¥–∏–∏':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            board1 = types.KeyboardButton('–§–æ—Ç–æ —Å—Ç—É–¥–∏–∏')
            board2 = types.KeyboardButton('–£–¥–æ–±—Å—Ç–≤–∞')
            board3 = types.KeyboardButton('–°–¥–∞–Ω–∏–µ —Å–Ω–∞—Ä—É–∂–∏')
            board4 = types.KeyboardButton('–ê–¥—Ä–µ—Å + –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è')
            board5 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(board1, board2, board3, board4, board5)
            bot.send_message(message.chat.id, '–ù–∞ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º', reply_markup=markup)

        elif message.text == '–ù–∞–∑–∞–¥':
            user_name = message.from_user.first_name
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            client = types.KeyboardButton('–ö–ª–∏–µ–Ω—Ç–∞–º')
            master = types.KeyboardButton('–ú–∞—Å—Ç–µ—Ä–∞–º')
            markup.add(client, master)
            bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç,{user_name}!\n–Ø —á–∞—Ç-–±–æ—Çüòá', reply_markup=markup)

        # elif message.text == '–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É':
        #     if id == 995091801:
        #         create_table()
        #         bot.send_message(message.chat.id, '–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã –º–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω')

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞':
            if id == 995091801:
                pass

        elif message.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            board1 = types.KeyboardButton('–°–µ–±–∞—Å—Ç—å—è–Ω')
            board2 = types.KeyboardButton('–ü–µ—Ç—Ä')
            board3 = types.KeyboardButton('–ú–∞—Ä–∫—É–ª—è –ü–µ—Ç—É—Ö–æ–≤')
            markup.add(board1, board2, board3)
            bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞', reply_markup=markup)
            bot.register_next_step_handler(message, name_master)


def name_master(message):
    global master
    master = message.text
    bot.send_message(message.chat.id, '–í—ã–±–∏—Ä–∏—Ç–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É –Ω–∞–ø—Ä–∏–º–µ—Ä 21.01.01')
    bot.register_next_step_handler(message, get_data1)


def get_data1(message):
    global data1
    data1 = message.text
    result = select_Name(master, data1, '0')
    bot.send_message(message.chat.id, f'–í—ã–±–∏—Ä–∏—Ç–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è')
    for i in result:
        bot.send_message(message.chat.id, f'{i}')
    bot.register_next_step_handler(message, get_updata1)


def get_updata1(message):
    global time1
    time1 = message.text
    bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è')
    bot.register_next_step_handler(message, get_name_person1)


def get_name_person1(message):
    global name_person1
    global data1
    global time1
    global master
    name_person1 = message.text
    update_person(master, data1, time1, name_person1)
    bot.send_message(message.chat.id, f'–í–∞—à–∞ –∑–∞–ø–∏—Å—å –∫ –º–∞—Å—Ç–µ—Ä—É {master}, {data1} –≤ {time1} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞, —Ö–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è!')


if __name__ == "__main__":
    bot.polling(none_stop=True)

